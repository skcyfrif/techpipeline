version: '3.8'

networks:
  tech-network:
    driver: bridge  # Custom network for all services

services:
  springboot-app:
    image: tech:latest  # Use the built Spring Boot Docker image
    build: .
    ports:
      - "2002:2002"  # Exposing internal Spring Boot port
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://tech-mysql-db:3306/CyfrifProTech
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    depends_on:
      tech-mysql-db:
        condition: service_healthy  # Ensure MySQL is ready before starting app
    networks:
      - tech-network

  tech-mysql-db:
    image: mysql:8
    container_name: tech-mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: CyfrifProTech
    ports:
      - "3302:3306"  # Expose MySQL externally on port 3302
    volumes:
      - mysql_data:/var/lib/mysql  # Persist MySQL data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Initialize MySQL privileges
    networks:
      - tech-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  nginx:
    image: nginx:latest
    container_name: tech-nginx
    restart: always
    ports:
      - "83:83"   # Expose HTTP on port 83
      - "443:443" # Expose HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro   # Nginx configuration
      - /etc/letsencrypt:/etc/letsencrypt       # SSL certificates (ensure they exist)
      - ./html:/usr/share/nginx/html            # Static files
    depends_on:
      - springboot-app
    networks:
      - tech-network

volumes:
  mysql_data:  # Define volume for MySQL persistence
